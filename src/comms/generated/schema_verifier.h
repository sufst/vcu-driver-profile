#ifndef SCHEMA_VERIFIER_H
#define SCHEMA_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef SCHEMA_READER_H
    #include "schema_reader.h"
#endif
#include "flatcc/flatcc_prologue.h"
#include "flatcc/flatcc_verifier.h"

static int Comms_Command_verify_table(flatcc_table_verifier_descriptor_t* td);

static inline int Comms_Version_verify_as_root(const void* buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf,
                                        bufsiz,
                                        Comms_Version_identifier,
                                        3,
                                        1);
}

static inline int Comms_Version_verify_as_typed_root(const void* buf,
                                                     size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf,
                                              bufsiz,
                                              Comms_Version_type_hash,
                                              3,
                                              1);
}

static inline int
Comms_Version_verify_as_root_with_type_hash(const void* buf,
                                            size_t bufsiz,
                                            flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 3, 1);
}

static inline int Comms_Version_verify_as_root_with_identifier(const void* buf,
                                                               size_t bufsiz,
                                                               const char* fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 3, 1);
}

static int Comms_Command_verify_table(flatcc_table_verifier_descriptor_t* td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 1, 1) /* id */))
        return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* var */))
        return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* val */))
        return ret;
    if ((ret = flatcc_verify_string_field(td, 3, 0) /* config_name */))
        return ret;
    if ((ret = flatcc_verify_field(td, 4, 3, 1) /* config_version */))
        return ret;
    return flatcc_verify_ok;
}

static inline int Comms_Command_verify_as_root(const void* buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf,
                                       bufsiz,
                                       Comms_Command_identifier,
                                       &Comms_Command_verify_table);
}

static inline int Comms_Command_verify_as_typed_root(const void* buf,
                                                     size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf,
                                       bufsiz,
                                       Comms_Command_type_identifier,
                                       &Comms_Command_verify_table);
}

static inline int Comms_Command_verify_as_root_with_identifier(const void* buf,
                                                               size_t bufsiz,
                                                               const char* fid)
{
    return flatcc_verify_table_as_root(buf,
                                       bufsiz,
                                       fid,
                                       &Comms_Command_verify_table);
}

static inline int
Comms_Command_verify_as_root_with_type_hash(const void* buf,
                                            size_t bufsiz,
                                            flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf,
                                             bufsiz,
                                             thash,
                                             &Comms_Command_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* SCHEMA_VERIFIER_H */
